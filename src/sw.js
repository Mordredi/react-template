const cacheName = 'AW_v1';

self.addEventListener('activate', e => {
  const whitelist = [cacheName];
  e.waitUntil(
    caches.keys()
      .then(keyList => 
        Promise.all(keyList.map(key => {
          if (!whitelist.includes(key)) {
            return caches.delete(key)
          }
        }))
      )
  );
});

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(cacheName)
      .then(cache => {
        // Get the assets manifest so we can see what our js file is named
        // This is because webpack hashes it
        fetch('webpack-manifest.json')
          .then(response => response.json())
          .then(assets => {
            // Open a cache and cache our files
            // We want to cache the page and the main.js generated by webpack
            // We could also cache any static assets like CSS or images
            const urlsToCache = [
              '/',
              assets['AW_135_BW.jpg'],
              assets['manifest.js'],
              assets['vendor.js'],
              assets['main.js'],
              assets['vendor.css'],
              assets['main.css'],
            ];
            cache.addAll(urlsToCache)
            console.log('cached');
          })
      })
  );
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request).then(response => 
      response || fetch(event.request)
    )
  );
});

